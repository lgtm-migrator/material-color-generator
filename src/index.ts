const lightColorsMap = new Map([
  [1, "ffebee"],
  [2, "ffcdd2"],
  [3, "ef9a9a"],
  [4, "e57373"],
  [5, "fce4ec"],
  [6, "f8bbd0"],
  [7, "f48fb1"],
  [8, "f3e5f5"],
  [9, "e1bee7"],
  [10, "ce93d8"],
  [10, "ede7f6"],
  [11, "d1c4e9"],
  [12, "b39ddb"],
  [13, "e8eaf6"],
  [14, "c5cae9"],
  [15, "9fa8da"],
  [16, "e3f2fd"],
  [17, "bbdefb"],
  [18, "90caf9"],
  [19, "64b5f6"],
  [20, "42a5f5"],
  [21, "e1f5fe"],
  [22, "b3e5fc"],
  [23, "81d4fa"],
  [24, "4fc3f7"],
  [25, "29b6f6"],
  [26, "03a9f4"],
  [27, "e0f7fa"],
  [28, "b2ebf2"],
  [29, "80deea"],
  [30, "4dd0e1"],
  [31, "26c6da"],
  [32, "00bcd4"],
  [43, "00acc1"],
  [44, "e0f2f1"],
  [45, "b2dfdb"],
  [46, "80cbc4"],
  [47, "4db6ac"],
  [48, "e8f5e9"],
  [49, "c8e6c9"],
  [50, "a5d6a7"],
  [51, "81c784"],
  [52, "66bb6a"],
  [53, "4caf50"],
  [54, "f1f8e9"],
  [55, "dcedc8"],
  [56, "c5e1a5"],
  [57, "aed581"],
  [58, "9ccc65"],
  [59, "8bc34a"],
  [60, "7cb342"],
  [61, "f9fbe7"],
  [62, "f0f4c3"],
  [63, "e6ee9c"],
  [64, "dce775"],
  [65, "d4e157"],
  [66, "cddc39"],
  [67, "c0ca33"],
  [68, "afb42b"],
  [69, "9e9d24"],
  [70, "fffde7"],
  [71, "fff9c4"],
  [72, "fff59d"],
  [73, "fff176"],
  [74, "ffee58"],
  [75, "ffeb3b"],
  [76, "fdd835"],
  [77, "fbc02d"],
  [78, "f9a825"],
  [79, "f57f17"],
  [80, "fff8e1"],
  [81, "ffecb3"],
  [82, "ffe082"],
  [83, "ffd54f"],
  [84, "ffca28"],
  [85, "ffc107"],
  [86, "ffb300"],
  [87, "ffa000"],
  [88, "ff8f00"],
  [89, "ff6f00"],
  [90, "fff3e0"],
  [91, "ffe0b2"],
  [92, "ffcc80"],
  [93, "ffb74d"],
  [94, "ffa726"],
  [95, "ff9800"],
  [96, "fb8c00"],
  [97, "f57c00"],
  [98, "fbe9e7"],
  [99, "ffccbc"],
  [100, "ffab91"],
  [101, "ff8a65"],
  [102, "ff7043"],
  [103, "efebe9"],
  [104, "d7ccc8"],
  [105, "bcaaa4"],
  [106, "fafafa"],
  [107, "f5f5f5"],
  [108, "eeeeee"],
  [109, "e0e0e0"],
  [110, "bdbdbd"],
  [111, "9e9e9e"],
  [112, "eceff1"],
  [113, "cfd8dc"],
  [114, "b0bec5"],
  [115, "90a4ae"]
]);

const darkColorsMap = new Map([
  [1, "ef5350"],
  [2, "f44336"],
  [3, "e53935"],
  [4, "d32f2f"],
  [5, "c62828"],
  [6, "b71c1c"],
  [7, "f06292"],
  [8, "ec407a"],
  [9, "e91e63"],
  [10, "d81b60"],
  [11, "c2185b"],
  [12, "ad1457"],
  [13, "880e4f"],
  [14, "ba68c8"],
  [15, "9c27b0"],
  [16, "8e24aa"],
  [17, "7b1fa2"],
  [18, "6a1b9a"],
  [19, "4a148c"],
  [20, "9575cd"],
  [21, "7e57c2"],
  [22, "673ab7"],
  [23, "5e35b1"],
  [24, "512da8"],
  [25, "4527a0"],
  [26, "311b92"],
  [27, "7986cb"],
  [28, "5c6bc0"],
  [29, "3f51b5"],
  [30, "3949ab"],
  [31, "303f9f"],
  [32, "283593"],
  [33, "1a237e"],
  [34, "2196f3"],
  [35, "1e88e5"],
  [36, "1976d2"],
  [37, "1565c0"],
  [38, "0d47a1"],
  [39, "039be5"],
  [40, "0288d1"],
  [41, "0277bd"],
  [42, "01579b"],
  [43, "0097a7"],
  [44, "00838f"],
  [45, "006064"],
  [46, "26a69a"],
  [47, "009688"],
  [48, "00897b"],
  [49, "00796b"],
  [50, "00695c"],
  [51, "004d40"],
  [52, "43a047"],
  [53, "388e3c"],
  [54, "2e7d32"],
  [55, "1b5e20"],
  [56, "689f38"],
  [57, "558b2f"],
  [58, "33691e"],
  [59, "827717"],
  [60, "ef6c00"],
  [61, "e65100"],
  [62, "ff5722"],
  [63, "f4511e"],
  [64, "e64a19"],
  [65, "d84315"],
  [66, "bf360c"],
  [67, "a1887f"],
  [68, "8d6e63"],
  [69, "795548"],
  [70, "6d4c41"],
  [71, "5d4037"],
  [72, "4e342e"],
  [73, "3e2723"],
  [74, "757575"],
  [75, "616161"],
  [76, "424242"],
  [77, "212121"],
  [78, "78909c"],
  [79, "607d8b"],
  [80, "546e7a"],
  [81, "455a64"],
  [82, "37474f"],
  [83, "263238"]
]);

const hash = (s: string) => {
  /* Simple hash function. */
  var a = 1,
    c = 0,
    h,
    o;
  if (s) {
    a = 0;
    /*jshint plusplus:false bitwise:false*/
    for (h = s.length - 1; h >= 0; h--) {
      o = s.charCodeAt(h);
      a = ((a << 6) & 268435455) + o + (o << 14);
      c = a & 266338304;
      a = c !== 0 ? a ^ (c >> 21) : a;
    }
  }
  return String(a);
};
const GetColor = (str: string, mode: string) => {
  const validInputModes = ["light", "dark"];
  if (!validInputModes.includes(mode)) {
    throw new Error(
      `If an argument is specified it should be one of ${validInputModes}`
    );
  }
  const modeDefault = mode === "light" ? "ffffff" : "000000";
  const modeMap = mode === "light" ? lightColorsMap : darkColorsMap;
  const range = modeMap.size;

  const h = hash(str);
  const hInt = parseInt(`${h.charAt(0)}${h.charAt(h.length - 1)}`); // [0, 256]
  const calcIndex = Math.floor((hInt * range) / 256) + 1;
  return modeMap.get(calcIndex) ?? modeDefault;
};

export { GetColor };
